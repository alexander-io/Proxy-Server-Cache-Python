<!DOCTYPE html>
<html>
  <head>

    <meta charset="utf-8">
    <title>mononoke.io</title>
    <!-- <link rel="stylesheet" href="node_modules/materialize-css/dist/css/materialize.css"> -->
    <link rel="stylesheet" href="node_modules/materialize-css/dist/css/materialize.css">
    <!-- <link href="https://fonts.googleapis.com/css?family=Ubuntu" rel="stylesheet"> -->
    <link href="https://fonts.googleapis.com/css?family=Nova+Mono" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Source+Code+Pro" rel="stylesheet">
    <script type="text/javascript" src="node_modules/jquery/dist/jquery.js"></script>
    <script type="text/javascript" src="node_modules/materialize-css/dist/js/materialize.js"></script>

    <!-- Load the Paper.js library -->

  	<script type="text/javascript" src="js/paper-full.js"></script>
  	<!-- Load external PaperScript and associate it with myCanvas -->
  	<script type="text/paperscript" src="script.js" canvas="mycanvas"></script>



    <script type="text/javascript" src="js/moon.js"></script>
    <script src="three.min.js"></script>
    <script src="js/Detector.js"></script>
    <script src="js/CanvasRenderer.js"></script>
    <script src="js/Projector.js"></script>
    <script src="js/OrbitControls.js"></script>
    <script src="js/KeyboardState.js"></script>
    <script type="text/javascript" src="node_modules/highlightjs/highlight.pack.js"></script>
    <!-- material design icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons"rel="stylesheet">
    <link rel="stylesheet" href="solarized-dark.css" media="screen" title="no title" charset="utf-8">
    <script>
      hljs.initHighlightingOnLoad();
    </script>

      <script type="text/javascript">

      </script>
    <style media="screen">
      html{
        background-color: #ECEFF1;
        font-family: 'Source Code Pro', monospace;
        /*font-family: 'Nova Mono', monospace;*/
      }
      h1, h2, h3, h4, h5  {
        font-family: 'Nova Mono', monospace;
      }
      .col {

        background-color: #607D8B;
        color: white;
        font-size: 3em;
        /*padding: 50px;*/
        /*padding: 80px;*/
        /*margin: 10px;*/
        text-align: center;
        vertical-align: middle;
        line-height: 90px;

        /*box-shadow: 0 4px 8px 2px grey, 0 4px 8px 3px black;*/
        /*height: 100px;*/
        /*width: 100px;*/
      }
      #toast-container{
        /*bottom:100px;*/
        top:82%;
        right:17%;
      }
      p{
        line-height: 40px;
        font-family: 'Source Code Pro', monospace;
        font-size: 15px;;
      }
      .card-panel{
        padding-top: 5px;
      }
      .nav-wrapper{
        /*background-color: #90A4AE;*/
        background-color: #263238;
      }
      footer.page-footer{
        background-color: #263238;
      }
      #footer-content{
        background-color: #ffab00;
      }
      .parallax-container{
        height: 230px;
      }

    </style>
    <script type="text/javascript">
      $(document).ready(function(){
        $('.parallax').parallax();
      });
    </script>
  </head>
  <body style="background-color:pink;">
    <!-- position: relative; margin: 20px auto; width: 100%; height: 4500px; -->
    <canvas style="z-index:-1;position: fixed; width: 100%; height: 100%;"id="mycanvas" resize></canvas>
    <div id="moon" class="z-depth-5 hide-on-med-and-down"style="border:10px solid rgb(57,76,84);visibility: hidden;background-color:black;position:fixed;right:0px; height:400px; width:400px; border-radius:50%;"></div>
    <div id="developer" class="z-depth-5" style=" visibility:hidden;border-radius:50%; position: fixed; right:80px;bottom:100px;width:150px;height:150px;">
      <!-- little alex-->
      <img id="alex" src="images/alex.png" style="height:150px; width:150px; border-radius:50%; border:10px solid #ffab00;" alt="">
    </div>
    <nav>
      <div class="nav-wrapper z-depth-2" style="">
        <a href="#!" class="brand-logo" style="margin-left:80px;font-family: 'Nova Mono', monospace;">mononoke.io</a>
        <ul class="right hide-on-med-and-down">
          <!-- <li><a class="waves-effect waves-light btn-large z-depth-3" style="background-color: #FFE57F; color:#757575;">gitHub</a></li> -->
          <li><a class="waves-effect waves-light btn-large z-depth-3" href="https://github.com/alexanderclaybeard/mononoke.io"style="background-color: #FFE57F; color:#263238;">gitHub</a></li>

          <!-- <li><a class="waves-effect waves-light btn-large z-depth-3"style="background-color: #FFD740; color:#9E9E9E;">code</a></li> -->
          <li><a class="waves-effect waves-light btn-large z-depth-3" href="./code.html" style="background-color: #FFD740; color:#263238;">code</a></li>
          <li><a class="waves-effect waves-light btn-large z-depth-3" href="./author.html" style="background-color: #FFC400; color:white;">author</a></li>
          <li><a class="waves-effect waves-light btn-large z-depth-3" href="./contact.html" style="background-color: #FFAB00;">contact</a></li>
        </ul>
      </div>
    </nav>
    <img class="hide-on-med-and-down"src="images/pillar.png" style="width:500px;position:absolute;right:0px;top:180px;"alt="">
    <br>
    <br>
    <br>

    <br>
    <div class="container">
      <div class="section">
        <div class="card-panel hoverable">
          <h1 class="center-align">mononoke.io</h1>
        </div>
        <p>This website is was inspired by the creativity of <a href="https://en.wikipedia.org/wiki/Hayao_Miyazaki">Hayao Miyazaki</a> for the film <a href="https://en.wikipedia.org/wiki/Princess_Mononoke">Princess Mononoke</a> and from the design priciples of <a href="https://material.google.com/">Material Design</a>.
          The site is open source and is available on <a href="https://github.com/alexanderclaybeard/material_design_template">GitHub</a>; if you'd like to contribute to the project, cosider forking the repository. This site contains audio content created by <a href="http://pugetsoundpodcast.com/">The Puget Sound Podcast</a>, which is a student recorded podcast available on the iTunes store, and on <a href="https://.com/pugetsoundpodcast">SoundCloud</a>.
        </p>
      </div>
    </div>

    <!-- parallax -->
    <div class="row">
      <div class="parallax-container" style="height:570px;">
        <div class="parallax"><img src="images/rocks_plax_2.png" style="height:auto;width:auto;"></div>
      </div>
    </div>

    <div class="container">





        <!-- floating panel and text -->


        <br>
        <div class="col s12 m12 l12 z-depth-5">
          <div class="card">
            <div class="card-image">
              <img src="images/contrib.png">
              <span class="card-title">Card Title</span>
            </div>

            <div class="card-content ">
              <p style="color:black; font-size:25%;">
              Github Open Source contributions Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
            </div>
            <div class="card-action">
              <a href="mononoke.io">âˆ´</a>
            </div>
          </div>
        </div>
        <br>
        <br>
        <br>

        <!-- floating panel and text, customize python prompt tutorial -->
        <div class="section">
          <div class="card-panel hoverable" style="border-left: 10px solid #ffab00;">
            <h1 class="center-align"><img src="images/python.png" style="margin:auto;width:6%; height:auto;" alt="">Python Programming<img src="images/python.png" style="margin:auto;width:6%; height:auto;" alt=""></h1>
            <h4 class="center-align">Command Prompt Customization, December 28 | 2016</h4>
            <div class="row" style="background-color:white;">

              <div class="col s6 m6 l6 " style="color:black; background-color:white;">
                <p style="margin-top:0px">So you've been programming in Python, and you're feeling pretty badass... HOWEVER, you're tired of the stock interactive prompt symbol that looks like <strong>'>>>'</strong>. Well this guide is for you. If you're using a unix based operating system (mac or linux) and you're also using Python 3, then you can change your interactive prompt to be an emoji of choice. Note : if you're a died in the wool Python 2 user, you may still change your interactive prompt default symbol, but you'll have to find another guide to make it an emoji. <br>In my case, I made my interactive prompt symbol the python emoji.</p>
              </div>
              <div class="col s6 m6 l6 "style="background-color:white;">
                <img src="images/py3.png" style="display:block; position:relative; margin:auto; margin-top:17.5%; width:100%; top:50%">
              </div>
            </div>
          </div>
          <p>So, first you should install Python3. You can find a download link here : <a href="https://www.python.org/downloads/">Python Downloads</a>.</p>
          <p>Now that you have Python 3 installed, lets transiently change the interactive prompt symbol to get a handle on the future modification that we'll be making. Start by entering the Python 3 interactive shell, issue $ python3 into your terminal</p>
          <img src="images/py4.png" style="display:block; position:relative; margin:auto; width:100%;">
          <p>Issuing $ python3 into your terminal will translocate you into the Python interactive prompt. The default interactive prompt symbol is '>>>'. In other words, it's in need of a makeover. Let's use the Python import system to access the system specific parameters and functons available in the 'sys' module by issuing '$ import sys' into our interactive prompt.</p>
          <img src="images/importsys.png" style="display:block; position:relative; margin:auto; width:100%;">
          <p>By issuing '$ help(sys)' after importing the sys module, you may view the specifications of the sys module, including the functions that are made available through the importation of the module.</p>

          <p>After issuing '$ help(sys)', read through the content that is returned by the Python interactive prompt. Look for : ps1 = '>>>'  </p>
          <img src="images/helpsys.png" style="display:block; position:relative; margin:auto; width:100%;">
          <p>The variables ps1 and ps2 indicate "strings specifying the primary and secondary prompt symbol of the interpreter. These are only defined if the interpreter is in interactive mode." Now, press 'q' to exit the system specific specifications for the sys module and to return to the ineractive prompt. Once you're navigated back to the Python interactive prompt, let's change the value of the ps1 variable by issuing : sys.ps1 = '~~~ '</p>
          <img src="images/sysps1.png" style="display:block; position:relative; margin:auto; width:100%;">
          <p>Did you catch that? Issuing sys.ps1 = '~~~ ' has changed the interactive prompt symbol! Now, try issuing the same command but change the value inside of the quotes to whatever you desire! However, we still have a problem... once we exit ther Python interactive prompt and re-enter, our modification the the sys.ps1 variable does not persist. In order to make the modification persist we must complete a two part process: first, we'll create a script to be executed within the Pyton interactive prompt upon startup, next we'll edit our .bash_profile (or possibly .profile, .bashrc) in order to execute the startup python script. Take a look at this code, the contents make up the Python startup script :</p>

          <pre><code class="language-python">
# import the sys module
import sys

# assign the sys.ps1 variable to the desired prompt symbol
sys.ps1 = '~~~ '

# uncomment the following line in order to assign the sys.ps1 variable to the python emoji
# sys.ps1 = ' ' + u'\U0001f40d'.ljust(2) + ' $ '
          </code></pre>

          <p>Now that you know the essence of the Python interactive prompt startup script, let's save the contents out to a file. I decided to call mine .PYTHONSTARTUP (notice the '.' which is used as a prefix for the file and makes the file "hidden"). I saved this file out to my home directory : /Users/Alex/ </p>

          <p>Last we'll make an edit to our .bash_profile which is located in the home directory. Because the file is a "hidden", in order to see it in our terminal issue $ ls -a, which reads "list all". Note, if you don't have a .bash_profile, .profile, or .bashrc file located in your home directory you can make one by issuing $ touch .bash_profile. In order to edit the .bash_profile, use your favorite command line text editor, I'll be using nano. Once inside of the file, append the following code to the end of the file :</p>
          <pre><code class="language-bash">
export PYTHONSTARTUP=~/.PYTHONSTARTUP
          </code></pre>
          <p>Save the file and return to the terminal. Now, let's execute our script so that it takes effect! Issue : . ~/.bash_profile in order to execute the file.</p>
          <p>There's only one more step, issue $ python3 to launch the Python interactive prompt and behold the beautiful and persistent change to the prompt symbol!</p>
          <img src="images/py3.png" style="display:block; position:relative; margin:auto; width:100%;">
          <p>Here are some resources to help you along your way : <a href="https://www.nano-editor.org/">nano text editor</a>, <a href="http://www.charbase.com/">emoji character resource</a>, and <a href="https://www.ibm.com/support/knowledgecenter/en/ssw_aix_71/com.ibm.aix.osdevice/prof_file.htm">.profile</a>!  </p>
        </div>

        <!-- floating panel and text, podcast : women in economics -->
        <div class="section">
          <div class="card-panel hoverable"style="border-left: 10px solid #ffab00;">
            <h1 class="center-align">Puget Sound Podcast</h1>
            <h4 class="center-align">Episode 2 : Women in Economics, December 4 | 2016</h4>
          </div>
          <p>Hello Everyone,
            <br>For this episode, weâ€™ve spoken with Professor Fortmann and Natanya Glatt from the economics department on the topic of the underrepresentation of women in the department. This episode depicts the economics department in its current state in terms of gender distribution. Throughout the interview, we discuss the reasons why the disparity between women and men might exist in the department, and potential solutions to the issue.
          </p>
          <audio style="width: 600px;display: block; margin: auto;" controls>
      			<source src="audio/ep2women_economics.m4a" type="audio/ogg">
      			<source src="audio/ep1.mp3" type="audio/mpeg">
      		Your browser does not support the audio element.
      		</audio>
          <p>
            Make sure to subscribe to the podcast on iTunes and <a href="soundcloud.com/pugetsoundpodcast">SoundCloud</a> so you don't miss future episodes and leave us a rating and review in iTunes as it helps us out a lot to know what we are doing well and what we could be doing better.
            <br><br>Thanks everyone and...
            <br>We'll see you next time!
          </p>
        </div>
        <div class="divider"></div>
        <br>
        <br>


        <!-- floating panel and text, DVORAK keyoard -->
        <div class="section">
          <div class="card-panel hoverable"style="border-left: 10px solid #ffab00;">
            <h1 class="center-align">Computer Graphics</h1>
            <h4 class="center-align">Three.js Dvorak Keyboard Simulator, November 26 | 2016</h4>
          </div>
          <p>
            <a href="https://github.com/alexanderclaybeard/three.js-dvoark_simulator">github.com/alexanderclaybeard/three.js-dvoark_simulator/</a>

            <br>Here's an implementation of the <a href="threejs.org">three.js</a> javascript graphics library to simulate a <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">dvorak keyboard</a>. User input keystrokes are translated key ainmations in the dvorak layout in the below html canvas. Type in some keys and see for yourself...
          </p>
          <div id="keyboard-container" class="col s12 m12 l12 z-depth-5" style="padding:30px; background-color:#ffab00;">
            <div id="dvorakCanvas" class="z-depth-5 hide-on-med-and-down"style="display:block;margin: auto; height:400px;">
                <script src="dvorak.js"> </script>
            </div>
            <h2 class="hide-on-large-only">To view dvorak keyboard three.js interactive model, please view on large screen</h2>
            <!-- <img src="images/dvo.png" class="z-depth-5 hide-on-med-and-down"style="width:1200px;height:auto;display:block;position:relative;margin:auto;"/> -->
          </div>

        </div>
        <br>
        <div class="divider"></div>
        <br>
        <br>

        <!-- card panel, javascript PROTOTYPE -->
        <div class="section">
          <div class="card-panel hoverable">
            <h1 class="center-align">Javascript Prototypes</h1>
            <h4 class="center-align">A Prototypical Inheritance Model, November 20 | 2016</h4>
            <p>
              So, you've been coding in javascript, eh? Maybe you've heard the cool cats talking about prototypes in class. What is a prototype anyway?<strong>Prototypes are basically javascript's inheritance model.</strong>

              <blockquote cite="http://"style="border-left: 10px solid #ffab00;">
                "All objects in JavaScript are descended from Object; <strong>all objects inherit methods and properties from their prototype</strong>."
              </blockquote>
          		<p class="center-align">More about prototypes at : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype">PROTOTOTOTYPE</a></p>
              <br>
            </p>


            <h4 class="center-align">The following are models of prototypic relationships:</h4>

        		<div class="card-panel hoverable" style="padding:0px;">
              <img src="images/protoNode.png" style="display:block; position:relative; margin:auto; width:100%;">

        		</div>
            <div class="card-panel hoverable" style="padding:0px;">
              <img src="images/exProto.png" style="display:block; position:relative; margin:auto; width:100%;">
            </div>
            <p>
              <p class="center-align"style="border-left: 10px solid #ffab00;">The mammal node can be thought of as a prototype to walrus, meerkat, and platypus.</>
              <p class="center-align" style=" border-right:  10px solid #ffab00;">Similarly, the shape node can be regarded as the prototype of sphere, icosahedron, and triangle.</>

            </p>
            <br>
            <div class="divider"></div>
            <br>
            <div class="card-panel hoverable" style="background-color: #ffab00;">
              <div class="card-panel hoverable" style="background-color: white; border-left: 10px solid #ffab00;">
                <h5 class="center-align">Next is an example of a prototypical relationship in javascript.</h5>
              </div>
              <br>
              <div class="card-panel hoverable" style="background-color:white; border-left: 10px solid #ffab00;">
                <h5 class="center-align">This relationship is primarily made up of :</h5>
              </div>
              <!-- collapsible row -->
              <div class="row">
                <ul class="collapsible" data-collapsible="accordion">
                 <li>
                   <div class="collapsible-header center-align">

                      <i class="material-icons">code</i>

                     talk function
                   </div>
                   <div class="collapsible-body">
                    <pre><code class="language-js">
  function talk(){
    console.log(this.noise)
  }
                    </code></pre>
                   </div>
                 </li>
                 <li>
                   <div class="collapsible-header center-align">
                     <!-- code icon -->
                    <i class="material-icons">code</i>

                     mammal object
                   </div>
                   <div class="collapsible-body">
                     <pre><code class="language-js">
  const mammal = {
   talk : talk
  }
                     </code></pre>
                   </div>
                 </li>
                 <li>
                   <div class="collapsible-header center-align">
                     <!-- code icon -->
                      <i class="material-icons">code</i>
                     cat object
                   </div>
                   <div class="collapsible-body">
                     <pre><code class="language-js">
  const cat = {
   noise : 'meow'
  }
                     </code></pre>
                   </div>
                 </li>
               </ul>
              </div>
              <pre><code class="language-js" style=" height : 400px;">
  function talk(){
    console.log(this.noise)
  }

  const mammal = {
    talk : talk
  }

  const cat = {
    noise : 'meow'
  }

  Object.setPrototypeOf(cat, mammal)

  cat.talk();
              </code></pre>
              <div class="card-panel hoverable" style="background-color:white; border-left: 10px solid #ffab00;">
                <h5 >
            			Pay specific attention to the <strong>Object.setPrototypeOf(CHILD, PROTOTYPE)</strong> method call...
            		</h5>
              </div>
              <pre><code class="language-js">
  ...
  Object.setPrototypeOf(cat, mammal)
  ...
          		</code></pre>
              <div class="card-panel hoverable" style="background-color:white; border-left:10px solid #ffab00;">
                <p>
                  The <strong>Object.setPrototypeOf(cat, mammal)</strong> is setting the cat object to have a prototype of mammal.
                  <br><br> Therefore, the <strong>cat object inherits the functions and properties of the mammal prototype</strong>, in this case : cat inherits a talk property which has the talk() function as it's corresponding value :
                </p>
              </div>
              <pre><code class="language-js">
  function talk(){
    console.log(this.noise)
  }

  const mammal = {
  	talk : talk
  }

  const cat = {
  	noise : 'meow'
  }

  Object.setPrototypeOf(cat, mammal)
              </code></pre>
              <div class="card-panel hoverable" style="background-color:white; border-left: 10px solid #ffab00;">
                <p>
            			Now that the cat object has mammal as its prototype, the talk() function can be called on the cat object :
            		</p>
              </div>
              <pre><code class="language-js">
  ...
  cat.talk();
              </code></pre>
              <div class="card-panel hoverable" style="background-color:white;border-left:10px solid #ffab00;">
                <p>
                  Save the code out to a file, I called mine pt.js
            			<br><br>
            			With the javascript runtime environment <a href="https://nodejs.org/en/">node.js</a> installed, issue <strong>$ node fineName.js</strong> while navigated to the directory which contains the javscript file
                </p>

              </div>
              <div class="card-panel hoverable" style=" border-left: 10px solid #ffab00;">
                <img style="display: block; width : 100%;"src="images/purr.png">
              </div>
              <div class="card-panel hoverable" style="background-color:white; border-left: 10px solid #ffab00;">
                <h5 class="center-align ">Now, finally, the cat can meow. It's all it really wanted all along...</h5>
              </div>
              <div class="card-panel hoverable" style="background-color:white; border-left: 10px solid #ffab00">
                <p class="center-align">
                  But what exactly happened when the call to the <strong>talk()</strong> function occured on the <strong>cat</strong> object?
                  <br><br>Well...
                </p>
              </div>

                <!-- collapsiable drop down -->
                <div class="row">
                  <ul class="collapsible" data-collapsible="accordion">
                   <li>
                     <div class="collapsible-header">
                       <!-- code icon -->
                      <i class="material-icons">code</i>
                      javascript interpreter looks for a talk() function "inside" the cat object</div>
                     <div class="collapsible-body">
                       <pre><code class="language-js">
  // where could the talk funcion be?
  const cat = {
  	noise : 'meow'
  }
                       </code></pre>
                     </div>
                   </li>
                   <li>
                     <div class="collapsible-header"><!-- code icon -->
                      <i class="material-icons">code</i>
                      interpreter finds no talk() function in cat object</div>
                     <div class="collapsible-body">
                       <pre><code class="language-js">
  const cat = {
   noise : 'meow'
  }
  // no talk() to be found
                       </code></pre>
                     </div>
                   </li>
                   <li>
                     <div class="collapsible-header">
                       <!-- code icon -->
                        <i class="material-icons">code</i>
                        interpreter then checks prototypes for an inherited talk() function</div>
                     <div class="collapsible-body">
                       <pre><code class="language-js">
  const mammal = {
   talk : talk
  }

  const cat = {
   noise : 'meow'
  }

  // hmm, i see that cat has mammal as prototype
  Object.setPrototypeOf(cat, mammal)
                       </code></pre>
                     </div>
                   </li>
                   <li>
                     <div class="collapsible-header">
                       <!-- code icon -->
                        <i class="material-icons">code</i>
                        interpreter finds talk() function belonging to mammal prototype of cat</div>
                     <div class="collapsible-body">
                       <pre><code class="language-js">
  const mammal = {
   // this must be the talk function we're looking for
   talk : talk
  }
                       </code></pre>
                     </div>
                   </li>
                   <li>
                     <div class="collapsible-header">
                       <!-- code icon -->
                        <i class="material-icons">code</i>
                        talk() function is excuted on cat object, this makes a log to the console with the <strong>this.noise</strong> property belonging to cat object</div>
                     <div class="collapsible-body">
                       <pre><code class="language-js">
  ...
  cat.talk();
                       </code></pre>
                     </div>
                   </li>
                 </ul>
                </div>

            </div>
            <div class="card-panel hoverable">
              <p>
                The full javascript code for this example can be found below, with a <a href="https://en.wikipedia.org/wiki/Platypus">platypus</a> object added :
              </p>
              <pre><code class="language-js" style="height:300px;">
  function talk(){
  console.log(this.noise)
  }

  const mammal = {
  talk : talk
  }

  const cat = {
  noise : 'meow'
  }

  const platypus = {
  noise : 'quack'
  }

  Object.setPrototypeOf(cat, mammal)
  Object.setPrototypeOf(platypus, mammal)
  cat.talk();
  platypus.talk();
              </code></pre>
            </div>
          </div>
        </div>

      </div>
      <!-- parallax -->
      <div class="row">
        <div class="parallax-container">
          <div class="parallax"><img src="images/kodama_plax.jpg"></div>
        </div>
      </div>
      <div class="container">
        <!-- floating panel and text, podcast : women in economics -->
        <div class="section">
          <div class="card-panel hoverable"style="border-left: 10px solid #ffab00;">
            <h1 class="center-align">Puget Sound Podcast</h1>
            <h4 class="center-align">Episode 1 : Peer Allies, October 30 | 2016</h4>
          </div>
          <p>Greetings and Salutations,
            <br>I'm SO happy to announce the first <a href="http://pugetsoundpodcast.com/episodes/"> episode</a> of the Puget Sound Podcast.
            <br>We, as a team, were fortunate to get the chance to talk with two members of Peer Allies. We hope that with this conversations, we can help to foster the larger discussion throughout the campus of sexual violence and assault and that through the methods discussed in the episode, we can make strides to improve the campus awareness, reporting, and attitude about sexual violence and assault.
          </p>
          <audio style="width: 600px;display: block; margin: auto;" controls>
      			<source src="audio/ep1.mp3" type="audio/ogg">
      			<source src="audio/ep1.mp3" type="audio/mpeg">
      		Your browser does not support the audio element.
      		</audio>
          <p>
            Make sure to subscribe to the podcast on iTunes and <a href="https://.com/pugetsoundpodcast">SoundCloud</a> so you don't miss future episodes and leave us a rating and review in iTunes as it helps us out a lot to know what we are doing well and what we could be doing better.
            <br><br>Thanks everyone and...
            <br>We'll see you next time!
          </p>
        </div>
        <div class="divider"></div>
        <br>
        <br>
        <!-- card panel -->
        <div class="card-panel hoverable" style="border-left: 10px solid #ffab00;">
          <h1 class="center-align">Association for Computing Machinery</h1>
          <h4 class="center-align">Carriage Return, October 23 | 2016</h4>
          <p>
            Originally, the term <a href="https://en.wikipedia.org/wiki/Carriage_return">"carriage return"</a> referred to a mechanism or lever on a typewriter. It was used after typing a line of text and caused the assembly holding the paper (the carriage) to return to the right so that the machine was ready to type again on the left-hand side of the paper.
          </p>
        </div>
      </div>
      <!-- parallax -->
      <div class="row">
        <div class="parallax-container">
          <div class="parallax"><img src="images/typewriter.jpg" style="width:100%; "></div>
        </div>
      </div>
      <div class="container">
        <!-- card panel -->
        <div class="card-panel hoverable" style="border-left: 10px solid #ffab00;">
          <blockquote style="border-left: 10px solid #ffab00;"cite="https://upload.wikimedia.org/wikipedia/commons/0/07/A_typewriter_(10995863465).jpg">
            The above image by Takashi Hososhima from Tokyo, Japan (A typewriter) [CC BY-SA 2.0 (http://creativecommons.org/licenses/by-sa/2.0)], via Wikimedia Commons
          </blockquote>
          <a href="https://github.com/alexanderclaybeard/carriage-return-java">github.com/alexanderclaybeard/carriage-return-java</a>
          <pre><code class="language-js" style="height:400px;">
  class CarriageReturn{
    String[] circCharArr = {"|", "/", "â€”", "\\", "|", "/", "â€”", "\\"};
    public static void main(String args[]) throws InterruptedException {

      CarriageReturn cr = new CarriageReturn();

      cr.slashLoader(1);
    }

    public void slashLoader(int numLines) throws InterruptedException{
      if (numLines < 1 || numLines > 3)
      {
        numLines = 3;
      }


      System.out.println("array length : " + circCharArr.length);
      while(true){
        for (int i = 0; i < circCharArr.length; i++) {
          if (i == circCharArr.length)
          {
            // System.out.print("\r" + circCharArr[i] + "\t\r" + circCharArr[i-1] + "\t\r" + circCharArr[i-2]);
            i = 0;
            // continue;
          }
          //Pause for 1 second
          Thread.sleep(100);

          switch(numLines){
            case 1:
            System.out.print(
            "\r" +
            circCharArr[i] +
            "\t" +
            circCharArr[(i+1)%circCharArr.length] +
            "\t" +
            circCharArr[(i+2)%circCharArr.length] +
            "\t" +
            circCharArr[(i+3)%circCharArr.length] +
            "\t" +
            circCharArr[(i+4)%circCharArr.length] +
            "\t" +
            circCharArr[(i+5)%circCharArr.length] +
            "\t" +
            circCharArr[(i+6)%circCharArr.length] +
            "\t" +
            circCharArr[(i+7)%circCharArr.length] +
            "\t" +
            circCharArr[(i+8)%circCharArr.length] +
            "\t" +
            circCharArr[(i+9)%circCharArr.length] +
            "\t" +
            circCharArr[(i+10)%circCharArr.length] +
            "\t" +
            circCharArr[(i+11)%circCharArr.length] +
            "\t" +
            circCharArr[(i+12)%circCharArr.length] +
            "\t" +
            circCharArr[(i+13)%circCharArr.length] +
            "\t" +
            circCharArr[(i+14)%circCharArr.length] +
            "\t" +
            circCharArr[(i+15)%circCharArr.length] +
            "\t" +
            circCharArr[(i+16)%circCharArr.length]
            );
            // System.out.println();
            break;
            case 2:
            System.out.print(
            "\r" +
            circCharArr[i] +
            "\t" +
            circCharArr[(i+1)%circCharArr.length] +
            "\t" +
            circCharArr[(i+2)%circCharArr.length] +
            "\t" +
            circCharArr[(i+3)%circCharArr.length] +
            "\t" +
            circCharArr[(i+4)%circCharArr.length] +
            "\t" +
            circCharArr[(i+5)%circCharArr.length] +
            "\t" +
            circCharArr[(i+6)%circCharArr.length] +
            "\t" +
            circCharArr[(i+7)%circCharArr.length] +
            "\t" +
            circCharArr[(i+8)%circCharArr.length]
            );
            System.out.println();
            System.out.print(
            "\r" +
            circCharArr[i] +
            "\t" +
            circCharArr[(i+1)%circCharArr.length] +
            "\t" +
            circCharArr[(i+2)%circCharArr.length] +
            "\t" +
            circCharArr[(i+3)%circCharArr.length] +
            "\t" +
            circCharArr[(i+4)%circCharArr.length] +
            "\t" +
            circCharArr[(i+5)%circCharArr.length] +
            "\t" +
            circCharArr[(i+6)%circCharArr.length] +
            "\t" +
            circCharArr[(i+7)%circCharArr.length] +
            "\t" +
            circCharArr[(i+8)%circCharArr.length]
            );
            break;
            case 3:
            System.out.print(
            "\r" +
            circCharArr[i] +
            "\t" +
            circCharArr[(i+1)%circCharArr.length] +
            "\t" +
            circCharArr[(i+2)%circCharArr.length] +
            "\t" +
            circCharArr[(i+3)%circCharArr.length] +
            "\t" +
            circCharArr[(i+4)%circCharArr.length] +
            "\t" +
            circCharArr[(i+5)%circCharArr.length] +
            "\t" +
            circCharArr[(i+6)%circCharArr.length] +
            "\t" +
            circCharArr[(i+7)%circCharArr.length] +
            "\t" +
            circCharArr[(i+8)%circCharArr.length]
            );
            System.out.println();
            System.out.print(
            "\r" +
            circCharArr[i] +
            "\t" +
            circCharArr[(i+1)%circCharArr.length] +
            "\t" +
            circCharArr[(i+2)%circCharArr.length] +
            "\t" +
            circCharArr[(i+3)%circCharArr.length] +
            "\t" +
            circCharArr[(i+4)%circCharArr.length] +
            "\t" +
            circCharArr[(i+5)%circCharArr.length] +
            "\t" +
            circCharArr[(i+6)%circCharArr.length] +
            "\t" +
            circCharArr[(i+7)%circCharArr.length] +
            "\t" +
            circCharArr[(i+8)%circCharArr.length]
            );
            System.out.println();
            System.out.print(
            "\r" +
            circCharArr[i] +
            "\t" +
            circCharArr[(i+1)%circCharArr.length] +
            "\t" +
            circCharArr[(i+2)%circCharArr.length] +
            "\t" +
            circCharArr[(i+3)%circCharArr.length] +
            "\t" +
            circCharArr[(i+4)%circCharArr.length] +
            "\t" +
            circCharArr[(i+5)%circCharArr.length] +
            "\t" +
            circCharArr[(i+6)%circCharArr.length] +
            "\t" +
            circCharArr[(i+7)%circCharArr.length] +
            "\t" +
            circCharArr[(i+8)%circCharArr.length]
            );
            break;
            default:
            System.out.print("default, something went wrong");
            System.exit(0);
            break;
          }
        }
      }
    }
  }
          </code></pre>
          <h5 class="center-align">The carriage return in java is deonted with \r</h5>
        </div>




        <!-- 1234  -->
        <!-- <div class="row">
          <div class="col s3 z-depth-5">
            1
          </div>
          <div class="col s3 z-depth-5">
            2
          </div>
          <div class="col s3 z-depth-5">
            3
          </div>
          <div class="col s3 z-depth-5">
            4
          </div>
        </div>

        <br>
        <br>
        <br> -->
        <!-- shadow divs, two natures -->
        <!-- <div class="row" >
          <div class="col s6 z-depth-5">
            <h3>my two natures had memory in common</h3>
          </div>
          <div class="col s6 z-depth-5">
            <h3>my two natures had memory in common</h3>
          </div>
        </div>
        <br>
        <br>
        <br>
        <div class="row">
          <div class="col s6 z-depth-5">
            <h3>my two natures had memory in common</h3>
          </div>
          <div class="col s6 z-depth-5">
            <h3>my two natures had memory in common</h3>
          </div>
        </div>
        <br>
        <br>
        <br>

        <div class="divider"></div> -->

        <!-- floating panel and text -->
        <!-- <div class="section">
          <div class="card-panel hoverable">
            <h1 class="center-align" >dvorak keyboard</h1>
          </div>
          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
        </div>

        <div class="divider"></div>
        <br>
        <br>
        <br> -->
        <!-- floating panel and text -->
        <!-- <div class="section">
          <div class="card-panel hoverable"style="background: url(images/kit.png)">
            <h1 class="center-align">women in economics</h1>
          </div>
          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
        </div>
        <div class="divider"></div>
        <br>
        <br>
        <br> -->

        <!-- responsive divs -->
        <!-- <div class="row">
         <div class="col s12 m6 l6"><p>Responsive to small screens example</p></div>
         <div class="col s12 m6 l6"><p>Responsive to small screens example</p></div>
        </div> -->



       <!-- collapsiable drop down -->
       <!-- <div class="row">
         <ul class="collapsible" data-collapsible="accordion">
          <li>
            <div class="collapsible-header">First</div>
            <div class="collapsible-body"><p>Lorem ipsum dolor sit amet.</p></div>
          </li>
          <li>
            <div class="collapsible-header"></i>Second</div>
            <div class="collapsible-body"><p>Lorem ipsum dolor sit amet.</p></div>
          </li>
          <li>
            <div class="collapsible-header">Third</div>
            <div class="collapsible-body"><p>Lorem ipsum dolor sit amet.</p></div>
          </li>
        </ul>
       </div>
       <div class="divider"></div>
       <br>
       <br>
       <br> -->

       <!-- card panel -->
       <!-- <div class="card-panel hoverable">
         <h1>Javascript Prototypes</h1>
         <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
       </div> -->

       <!-- kodama floating elements -->
       <div id="kodama-container"class="fixed-action-btn "style=" right: auto; left:50px;top:60px;margin-top:10px;">
         <img id="kodama"src="images/kodama.png" style="width:250px;"alt="">
         <!-- <a href="#" style="background: url(http://pngimg.com/upload/cat_PNG92.png)">asdasd</a> -->
          <!-- <a class="btn-floating btn-large red" style="background: url(http://pngimg.com/upload/cat_PNG92.png)"> -->
            <!-- <i class="large material-icons"><h5>âˆ´</h5></i> -->
          </a>

          <ul style="bottom:auto;margin-top:10px;margin-right:10px;z-depth-5;">
            <li><a class="btn-floating z-depth-3" id="drop1"style="background-color:#ffab00;"></a></li>
            <li><a class="btn-floating z-depth-3" id="drop2"style="background-color:#FFC400;"></a></li>
            <li><a class="btn-floating z-depth-3" id="drop3"style="background-color:#FFD740;"></a></li>
            <li><a class="btn-floating z-depth-3" id="drop4"style="background-color:#FFE57F;"></a></li>
          </ul>
        </div>
      </div>

      <!-- parallax -->
      <div class="row">
        <div class="parallax-container">
          <div class="parallax"><img src="images/kodama_plax.jpg"></div>
        </div>
      </div>

      <!-- image cards -->
      <div class="container">
        <div class="row"style="font-size:25%;">
          <div class="col s12 m6 l6">
            <div class="card">
              <div class="card-image">
                <img src="images/2001-4d.jpeg">
                <span class="card-title">âˆ´</span>
              </div>
              <div class="card-content ">
                <p style="color:black; ">On a journey to find the cure for a Tatarigami's curse, Ashitaka finds himself in the middle of a war between the forest gods and Tatara, a mining colony. In this quest he also meets San, the Mononoke Hime.
                </p>
              </div>
              <div class="card-action">
                <a href="mononoke.io">âˆ´</a>
              </div>
            </div>
          </div>
          <div class="col s12 m6 l6">
            <div class="card">
              <div class="card-image">
                <img src="images/2001-4d.jpeg">
                <span class="card-title">âˆ´</span>
              </div>
              <div class="card-content ">
                <p style="color:black;">On a journey to find the cure for a Tatarigami's curse, Ashitaka finds himself in the middle of a war between the forest gods and Tatara, a mining colony. In this quest he also meets San, the Mononoke Hime.
                </p>
              </div>
              <div class="card-action">
                <a href="mononoke.io">âˆ´</a>
              </div>
            </div>
          </div>
          <div class="col s12 m6 l6">
            <div class="card">
              <div class="card-image">
                <img src="images/2001-4d.jpeg">
                <span class="card-title">âˆ´</span>
              </div>
              <div class="card-content ">
                <p style="color:black;">On a journey to find the cure for a Tatarigami's curse, Ashitaka finds himself in the middle of a war between the forest gods and Tatara, a mining colony. In this quest he also meets San, the Mononoke Hime.
                </p>
              </div>
              <div class="card-action">
                <a href="mononoke.io">âˆ´</a>
              </div>
            </div>
          </div>
          <div class="col s12 m6 l6">
            <div class="card">
              <div class="card-image">
                <img src="images/2001-4d.jpeg">
                <span class="card-title">âˆ´</span>
              </div>
              <div class="card-content ">
                <p style="color:black;">On a journey to find the cure for a Tatarigami's curse, Ashitaka finds himself in the middle of a war between the forest gods and Tatara, a mining colony. In this quest he also meets San, the Mononoke Hime.
                </p>
              </div>
              <div class="card-action">
                <a href="mononoke.io">âˆ´</a>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="container">
        <div class="divider"></div>
        <br>
        <br>
        <br>
      </div>

      <br>
      <br>
      <br>

      <!-- footer -->
      <footer class="page-footer">
       <div class="container">
         <div class="row">
           <div class="col l6 s12 z-depth-5"id="footer-content">
             <h1 class="white-text">mononoke.io</h1>
             <br>
             <h5>
              I found I could say things with color and shapes that I couldn't say any other way - things I had no words for.
              </h5>
              <br>
              <h5>â€” Georgia O'keeffe</h5>
             <!-- <h5>As you are now, so once was I. As I am now, so you will be.</h5> -->
             <br>

             <!-- <p class="grey-text text-lighten-4">As you are now, so once was I. As I am now, so you will be.</p> -->
           </div>
           <div class="col l4 offset-l2 s12 z-depth-5"id="footer-content">
             <div class="card-panel hoverable">

               <ul>
                 <li><a class="grey-text text-lighten-3" href="https://github.com/alexanderclaybeard"><h5><!-- code icon -->
                <i class="material-icons black-text">code</i></h5><h5 style="color:#039be5;">GitHub</h5></a></li>
                 <br>
                 <li><a class="grey-text text-lighten-3" href="http://pugetsoundpodcast.com/"><h5 class="black-text"><i class="material-icons">mic</i></h5><h5 style="color:#039be5;">Puget Sound Podcast</h5></a></li>
                  <br>
                 <li><a class="grey-text text-lighten-3" href="http://acm.pugetsound.edu"><h5 class="black-text"><i class="material-icons">power_settings_new</i></h5><h5 style="color:#039be5;">Association for Computing Machinery</h5></a></li>

                 <!-- <li><a class="grey-text text-lighten-3" href="#!">Link 4</a></li> -->
               </ul>
             </div>
           </div>
         </div>
       </div>
       <div class="footer-copyright">
          <div class="container">
            mononoke.io
          <a class="grey-text text-lighten-4 right" href="#!">âˆ´</a>
          </div>
        </div>
      </footer>
      <script type="text/javascript" src="js/dev.js"></script>
  </body>
</html>
